# yaml-language-server: $schema=https://json.schemastore.org/github-workflow

name: pre-release

on:
  push:
    tags:
      - 'v[0-9]+*'
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-upload-artifacts:
    name: Building and uploading artifacts
    runs-on: ${{ matrix.runner_os }}
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - target: x86_64-unknown-linux-musl
            runner_os: ubuntu-latest
            artifact_suffix: .tar.xz
          - target: x86_64-apple-darwin
            runner_os: macos-latest
            artifact_suffix: .tar.xz
          - target: x86_64-pc-windows-msvc
            runner_os: windows-latest
            artifact_suffix: .7z

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install musl-tools on Linux
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt -y install musl-tools

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: ${{ matrix.target }}
          toolchain: stable
          profile: minimal

      - name: Cache Rust toolchain and build artifacts
        uses: Swatinem/rust-cache@v1

      - name: Build artifact
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target ${{ matrix.target }}

      - name: Prepare artifact on Linux/macOS
        if: runner.os == 'Linux' || runner.os == 'macOS'
        run: |
          cd target/${{ matrix.target }}/release
          strip aoide
          tar cJvf ../../../aoide-${{ matrix.target }}${{ matrix.artifact_suffix }} aoide
          cd -
      - name: Prepare artifact on Windows
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.target }}/release
          strip aoide.exe
          7z a ../../../aoide-${{ matrix.target }}${{ matrix.artifact_suffix }} aoide.exe
          cd -

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: aoide-${{ matrix.target }}${{ matrix.artifact_suffix }}
          path: aoide-${{ matrix.target }}${{ matrix.artifact_suffix }}

  create-release-draft:
    name: Creating release draft
    needs: build-and-upload-artifacts
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v2

      - name: Generate artifact checksums
        run: for file in aoide-*/aoide-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Extract release notes from changelog
        run: cat CHANGELOG.md | tail -n +7 | head -n 25 > RELEASE_NOTES.md

      - name: Create release draft
        uses: softprops/action-gh-release@v1
        with:
          files: aoide-*/aoide-*
          body_path: RELEASE_NOTES.md
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
